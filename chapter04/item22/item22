**인터페이스는 자신을 구현한 클래스의 인스턴스를 참조할 수 있는 타입 역할을 한다.**

**⇒ 클래스가 어떤 인터페이스를 구현한다는 것은 자신의 인스턴스로 무엇을 할 수 있는지를 클라이언트에 얘기해주는 것**

이 지침에 맞지 않는 예로 **상수 인터페이스**라는 것이 있다.

**상수 인터페이스란 메서드 없이, 상수를 뜻하는 static final 필드로만 가득 찬 인터페이스**

ex)

```jsx
public interface Phy{
    public static final double ABOGADROS = 6.022_140_857e23;
	  public static final double BOLTZMANN = 1.380_648_52e-23
}
```

→ 클래스 내부에서 사용하는 상수는 외부 인터페이스가 아니라 내부 구현에 해당

⇒ 상수 인터페이스를 구현하는 것은 **내부 구현을 클래스의 API로 노출하는 행위**

만약 **상수를 공개할 목적**이라면 특정 클래스나 인터페이스와 강하게 연관된 상수라면 **클래스나 인터페이스 자체에 추가해야함**

- Integer와 Double에 선언된 MIN_VALE와 MAX_VALUE 상수가 이런 예시
- 열거타입(ENUM)으로 나타내기 적합한 상수라면 열거 타입으로 공개
- 인스턴스화할 수 없는 유틸리티 클래스에 담아 공개
